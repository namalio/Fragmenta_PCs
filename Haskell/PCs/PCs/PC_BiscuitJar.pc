PC PC_BiscuitJar@BiscuitJar
atom openJar
compound BiscuitJar.n,m@openJar
compound JarOpened.n,m@OpJarOpenedIf
stop STOP
operator OpJarOpenedIf.OpIf
op_connector_g OpJarOpenedIf->OpJarOpened{n>=0 and n<=m}
op_else_connector OpJarOpenedIf->STOP
operator OpJarOpened.OpChoice
atom takeBiscuit{n>0}
atom dropBiscuit{n<m}
atom closeJar
op_connector OpJarOpened->takeBiscuit
op_connector OpJarOpened->dropBiscuit
op_connector OpJarOpened->closeJar
reference RefJarOpened
atom openJar
ref_connector RefJarOpened->JarOpened.n;m
after_connector openJar->RefJarOpened
reference RefJarOpenedTake
ref_connector RefJarOpenedTake->JarOpened.n-1;m
reference RefJarOpenedDrop
ref_connector RefJarOpenedDrop->JarOpened.n+1;m
after_connector takeBiscuit->RefJarOpenedTake
after_connector dropBiscuit->RefJarOpenedDrop
reference RefBiscuitJar
ref_connector RefBiscuitJar->BiscuitJar.n;m
after_connector closeJar->RefBiscuitJar
