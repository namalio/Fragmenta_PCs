PC PC_CMBarred@CMBarred
reference RefBarredAsset
ref_connector RefBarredAsset->BarredAsset.{cardIn},{cancel},{grant},{optWithdraw, showBalance},{withdraw, cashDeny, cashDispense, fail, cardSwallow, cCollectTimeout, cCollect, cardEject, deny, cancel}
compound CMBarred@RefBarredAsset
atom start<:ses>
compound BarredAsset.ses,rses,bes,pes,oes@OpBarredAsset
after_connector BarredAsset->RefBarredAsset2
operator OpBarredAsset.OpChoice
op_connector OpBarredAsset->start
atom restart<:rses>
op_connector OpBarredAsset->restart
after_connector start->DoIt
operator OpCarryOut.OpIntChoice
compound DoIt@CarryOut
compound CarryOut@OpCarryOut
operator OpCarryOut2.OpChoice
skip SKIP
op_connector OpCarryOut->OpCarryOut2
op_connector OpCarryOut->SKIP
atom doOther<:oes>
atom erect<:bes>
op_connector OpCarryOut2->doOther
op_connector OpCarryOut2->erect
reference RefCarryOut
ref_connector RefCarryOut->CarryOut
after_connector doOther->RefCarryOut
after_connector erect->DoBarred
compound DoBarred@OpDoBarred
operator OpDoBarred.OpIntChoice
operator OpDoBarred2.OpChoice
skip SKIP2
op_connector OpDoBarred->OpDoBarred2
op_connector OpDoBarred->SKIP2
atom doOther2<:oes>
atom protected<:pes>
op_connector OpDoBarred2->doOther2
op_connector OpDoBarred2->protected
reference refDoBarred
ref_connector refDoBarred->DoBarred
after_connector doOther2->refDoBarred
after_connector protected->refDoBarred
reference RefBarredAsset2
ref_connector RefBarredAsset2->BarredAsset.ses,rses,bes,pes,oes
